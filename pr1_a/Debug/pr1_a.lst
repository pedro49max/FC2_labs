
pr1_a.elf:     file format elf32-littleriscv
pr1_a.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x0000002c memsz 0x0000002c flags r-x
    LOAD off    0x00000000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000000 memsz 0x00000004 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .text             0000002c  00000000  00000000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss              00000004  00010000  00010000  00002000  2**0  ALLOC
  2 .riscv.attributes 0000001f  00000000  00000000  0000102c  2**0  CONTENTS, READONLY
  3 .debug_line       00000073  00000000  00000000  0000104b  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_info       00000026  00000000  00000000  000010be  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev     00000014  00000000  00000000  000010e4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges    00000020  00000000  00000000  000010f8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_str        00000049  00000000  00000000  00001118  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00010000 l    d  .bss	00000000 .bss
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 ./pr1_a.o
0000000a l       *ABS*	00000000 N
00010000 l       .bss	00000000 res
0000000c l       .text	00000000 for
0000001c l       .text	00000000 end
00000000 g       .text	00000000 main
00020000 g       *ABS*	00000000 _stack



Disassembly of section .text:

00000000 <main>:
main():
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:33
//program
.text
.global main
main:

    li t0, 0    //we use the address to load the value of i
   0:	00000293          	li	t0,0
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:34
    li t1, N    	//we use the address to load the value of N
   4:	00a00313          	li	t1,10
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:35
    li t4, 0	//we use the address to load the value of res
   8:	00000e93          	li	t4,0

0000000c <for>:
for():
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:37
for:
    beq t0, t1, end //if i == N fin
   c:	00628863          	beq	t0,t1,1c <end>
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:38
    add t4, t4, t0//res+=i
  10:	005e8eb3          	add	t4,t4,t0
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:39
    addi t0, t0, 1
  14:	00128293          	addi	t0,t0,1
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:40
    j for
  18:	ff5ff06f          	j	c <for>

0000001c <end>:
end():
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:43

end:                //end of program
    la t5, res        //the address of res is loaded into t5
  1c:	00010f17          	auipc	t5,0x10
  20:	fe4f0f13          	addi	t5,t5,-28 # 10000 <res>
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:44
	sw t4, 0(t5)    //we store t4 (res) into res
  24:	01df2023          	sw	t4,0(t5)
C:\Universidad\Cuatri2\FC2\FC2labWS\pr1_a\Debug/../pr1_a.asm:45
    j end           //the program stays here forever
  28:	ff5ff06f          	j	1c <end>
